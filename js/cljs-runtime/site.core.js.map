{"version":3,"sources":["site/core.cljs"],"mappings":";;;;AAIA,AAAA,AAAMA,AAAmBC;AAAzB,AACE,AAAMC,AAAK,AAAQ,AAAO,AAAQD;AAC5BE,AAAS,AAAA,AAAiBC;AAC1BC,AAAS,AAAaF;AACtBG,AAAS,AAAI,AAAA,AAACC,AAAEF,AACL,AAAA,AAAA,AAACG,AAAeN,AAChB,AAAA,AAAWA;AAL5B,AAME,AAAM,AAAQC,AAAUG;;AAE5B,AAAA,AAAMG;AAAN,AACE,AAAOC,AAAM,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AACiB,AAAKC;AAAL,AAAQ,AAAA,AAAA,AAAWC;AADrC,AAEkBb;;AAEjC,AAAA,AAAA,AAAAc,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAME,AAASI;AAAf,AACE,AAACf;;;AADH,AAAA,AAAA,AAAMW;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAF;;;AAAA","names":["site.core/update-lang-link!","data","path","lang-nav","js/document","new-lang","new-path","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","clojure.string/replace","site.core/barba-init!","js/module$node_modules$$barba$core$dist$barba_umd","cljs.core/clj->js","_","js/window","var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","site.core/init!","seq38763","self__4718__auto__","cljs.core/seq","args"],"sourcesContent":["(ns site.core\n  (:require [\"@barba/core\" :as barba]\n            [clojure.string :as string]))\n\n(defn update-lang-link! [data]\n  (let [path (.-path (.-url (.-next data)))\n        lang-nav (.getElementById js/document \"lang-nav\")\n        new-lang (.-innerHTML lang-nav)\n        new-path (if (= new-lang \"en\")\n                   (string/replace path #\"^/es\" \"\")\n                   (str \"/es\" path))]\n    (set! (.-href lang-nav) new-path)))\n\n(defn barba-init! []\n  (.init barba (clj->js {:transitions\n                        [{:leave (fn [_] (.scrollTo js/window 0 0))\n                          :enter update-lang-link!}]})))\n\n(defn init! [& args]\n  (barba-init!))\n"]}